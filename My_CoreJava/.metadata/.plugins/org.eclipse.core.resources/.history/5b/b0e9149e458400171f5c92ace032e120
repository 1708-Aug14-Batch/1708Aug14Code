package com.bank.dao;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.math.BigDecimal;

import pojos.User;

public class DaoTextImpl implements Dao {
	
	public static final String FILEPATH = "src/com/bank/data/bank_data.txt";

	public boolean addUser(User user) {
		if (user == null) return false;
		
		int next = nextId();
		if (next < 1) return false;
		
		try (BufferedWriter bw = new BufferedWriter(new FileWriter(FILEPATH, true))) {
			
			bw.write(String.valueOf(next) + ':' + user.getEmail() + ':' + user.getPassword() + ':'
					+ user.getLast() + ':' + user.getFirst() + ':' + user.getBalance() + '\n');
			
		} catch (IOException e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}

	public boolean editUser(int userId, User user) {

		String tempPath = "src/com/bank/data/bank_data.txt";
		try (BufferedReader br = new BufferedReader(new FileReader(FILEPATH));
				BufferedWriter bw = new BufferedWriter(new FileWriter(tempPath))) {
			
			
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return false;
	}

	public User getUser(int userId) {
		if (userId < 1) return null;
		
		try (BufferedReader br = new BufferedReader(new FileReader(FILEPATH))) {
			String line = "";
			while ((line = br.readLine()) != null) {
				if (String.valueOf(userId).equals(line.split(":")[0])) {
					return parseLine(line);
				}
			}
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}

	public User getUser(String email) {
		if (email == null) return null;
		
		try (BufferedReader br = new BufferedReader(new FileReader(FILEPATH))) {
			String line = "";
			while ((line = br.readLine()) != null) {
				if (email.equals(line.split(":")[1])) {
					return parseLine(line);
				}
			}
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}

	public boolean hasUser(String email) {
		return getUser(email) != null;
	}
	
	private User parseLine(String line) {
		String[] info = line.split(":");
		
		if (info.length != 6) return null;
		
		User user = new User();
		
		try {
			user.setUserId(Integer.valueOf(info[0]));
			user.setBalance(new BigDecimal(info[5]));
		}
		catch (NumberFormatException e) {
			e.printStackTrace();
			return null;
		}
		user.setEmail(info[1]);
		user.setPassword(info[2]);
		user.setLast(info[3]);
		user.setFirst(info[4]);
		
		return user;
	}

	private int nextId() {
		int ret = 0;
		try (BufferedReader br = new BufferedReader(new FileReader(FILEPATH))) {
			String line = "";
			while ((line = br.readLine()) != null) {
				
			}
			if (line == "") return 1;
			
			ret = Integer.parseInt(line.split(":")[0]);
		}
		catch (NumberFormatException e) {
			e.printStackTrace();
			return -1;
		}
		catch (IOException e) {
			e.printStackTrace();
			return -1;
		}
		return ret + 1;
	}
}
