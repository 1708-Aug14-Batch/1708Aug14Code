package com.bank.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.bank.pojos.Account;
import com.bank.pojos.Users;
import com.bank.util.ConnectionFactory;

public class DAOImpl implements DAO {
	
	
	public int addUser(String fn, String ln, String email, String password){
		
		try(Connection conn = ConnectionFactory.getInstance().getConnection();){
			conn.setAutoCommit(false);
			String sql = "intsert into user" + "(firstname, lastname, email, password)" + "values(?,?,?,?)";
			String [] key = new String[1];
			key[0] = "user_id";
			PreparedStatement ps = conn.prepareStatement(sql, key);
			ps.setString(1, fn);
			ps.setString(2, ln);
			ps.setString(3, email);
			ps.setString(4, password);
			
			int n = ps.executeUpdate();
			int id =0;
			ResultSet pk = ps.getGeneratedKeys();
			while(pk.next()){
				id = pk.getInt(1);
				}
			
			conn.commit();
			return id;
			
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return -1;
	}
	public Account createAccount(Users u, int typeId){
		
		Account a = null;
		try(Connection conn = ConnectionFactory.getInstance().getConnection();){
			conn.setAutoCommit(false);
			String sql = "insert into accounts(user_id, type_id)"+ "values(?,?)";
			String [] key = new String[1];
			key[0]= "account_id";
			PreparedStatement ps = conn.prepareStatement(sql, key);
			ps.setInt(1, u.getId());
			ps.setInt(2, typeId);
			
			ps.executeUpdate();
			int id =0;
			ResultSet pk = ps.getGeneratedKeys();
			while(pk.next()){
				id = pk.getInt(1);
			}
			a.setTypeId(null);
			a.getBalance();
			conn.commit();
			//return id;
			
		return null;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}

}
