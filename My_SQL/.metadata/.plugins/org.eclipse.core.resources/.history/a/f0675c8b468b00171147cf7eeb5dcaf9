package com.bank.service;

import java.math.BigDecimal;
import java.util.List;

//import com.bank.dao.Dao;
import com.bank.dao.DaoImpl;
import com.bank.pojos.Account;
import com.bank.pojos.User;

public class Service {

	public static User getCurrentUser() {
		return currentUser;
	}
	
	public static void withdraw(BigDecimal amount) {
		if (amount.compareTo(BigDecimal.ZERO) < 0 || amount.compareTo(currentUser.getBalance()) > 0) return;

		currentUser.setBalance(currentUser.getBalance().subtract(amount));
		dao.editUser(currentUser);
	}
	
	public static void deposit(BigDecimal amount) {
		if (amount.compareTo(BigDecimal.ZERO) < 0) return;

		currentUser.setBalance(currentUser.getBalance().add(amount));
		dao.editUser(currentUser);
	}
	
	public static String createUser(User user, String password) {
		if (dao.hasUser(user.getEmail())) return "Account already associated with that email";
		
		int userId = dao.addUser(user, password);
		
		if (userId == -1) {
			return "An unknown error occurred creating account";
		}
		
		user.setId(userId);
		
		return null;
	}
	
	public static void updateUser(User user) {
		dao.editUser(user);
	}
	
	public static String loginUser(String email, String password) {
		if ("".equals(email) || "".equals(password)) return "You must enter an email and password";
		
		if (!dao.hasUser(email)) return "There is no account associated with that email";
		
		User user = dao.getUser(email, password);
		
		if (user != null) {
			currentUser = user;
			return null;
		}
		else {
			return "Incorrect email or password";
		}
	}
	
	public static void logoutUser() {
		currentUser = null;
	}
	
	public static List<Account> getAccounts(int userId) {
		return dao.getAccounts(userId);
	}
	
	private static User currentUser;	
	private static DaoImpl dao = new DaoImpl();
}
