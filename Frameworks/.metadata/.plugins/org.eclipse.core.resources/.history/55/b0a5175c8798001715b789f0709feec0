package com.bank.dao;

import java.util.List;
import java.util.Set;

import org.hibernate.Criteria;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;

import com.bank.beans.*;
import com.bank.util.ConnectionUtil;

public class HibernateDao {
	
	public <T> void addSimple(final Class<T> obj){
	Session session = ConnectionUtil.getSession();
		
		try{
		Transaction tx = (Transaction) session.beginTransaction();
		session.save(obj);
		tx.commit();
		}
		finally{
			session.close();
		}
	}
	
	public <T> Class<T> readSimple(final int id) {
		
		Session session = ConnectionUtil.getSession();
		Class<T> result = null;
		try{
			result = (Class<T>) session.get(Class<T>, id);
		}
		catch(HibernateException e){
			e.printStackTrace();
		}
		finally{
			session.close();
		}
		return result;
	}
	
	/*Criteria is a simplified API for retrieving entities 
	by composing Criterion objects. This is a very 
	convenient approach for functionality like "search" screens 
	where there is a variable number of conditions to be placed 
	upon the result set.								
	*/
	
	public List<Student> getAllStudents(){
		Session session = ConnectionUtil.getSession();
		Criteria criteria = session.createCriteria(Student.class);
		List<Student> students = criteria.list();
		session.close();
		return students;
	}
	

}