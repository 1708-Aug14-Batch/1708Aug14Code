/**
 * JS Homework Connor Monson
 */

/*
 * 1. Fibonacci Define function: fib(n) Return the nth number in the fibonacci
 * sequence.
 */
function fib(n) {
	console.log(n);
	if (n <= 1)
		return n;
	else
		return (fib(n - 1) + fib(n - 2));
}
function runFibonacci() {
	var display = document.getElementById("fibonacci_display");
	var n = document.getElementById("fibonacci_text").value;
	display.innerHTML = fib(n);
}
document.getElementById("fibonacci_button").addEventListener("click",
		runFibonacci);

/*
 * 2. Bubble Sort Define function: bubbleSort(numArray) Use the bubble sort
 * algorithm to sort the array. Return the sorted array.
 */
function runBubbleSort(numArray) {
	numArray = bubbleSort(numArray)
	alert("Sorted array: " + numArray);
}
function bubbleSort(numArray) {
	var swapped = true;

	while (swapped) {
		// Set to false by default. If nothing is swapped then loop will end
		swapped = false;

		// Current index for searching through the array
		var i;
		/*
		 * Bubble sort will be looking at numbers in pairs so the loop ends at
		 * one previous to the last element
		 */
		for (i = 0; i < numArray.length - 1; i++) {
			if (numArray[i] > numArray[i + 1]) {
				swapped = true;

				// Swapping two elements requires a third
				// temporary variable
				temp = numArray[i];
				numArray[i] = numArray[i + 1];
				numArray[i + 1] = temp;
			}
		}

	}

	return numArray;
}
document.getElementById("fibonacci_button").addEventListener("click",
		runFibonacci);

/*
 * 3. Reverse String Define function: reverseStr(someStr) Reverse and return the
 * String.
 */
function reverseString(someStr) {
	var i;
	var resultStr = "";

	for (i = someStr.length - 1; i >= 0; i--)
		resultStr = resultStr.concat(someStr.charAt(i));
	// resultStr = resultStr.concat(someStr.charAt(i));

	return resultStr;
}
document.getElementById("fibonacci_button").addEventListener("click",
		runFibonacci);

/*
 * 4. Factorial Define function: factorial(someNum) Use recursion to compute and
 * return the factorial of someNum.
 */
function factorial(someNum) {
	if (someNum == 1)
		return someNum;

	return someNum * factorial(someNum - 1);
}
document.getElementById("fibonacci_button").addEventListener("click",
		runFibonacci);

/*
 * 5. Substring Define function substring(someStr, length, offset) Return the
 * substring contained between offset and (offset + length) inclusively. If
 * incorrect input is entered, use the alert function and describe why the input
 * was incorrect.
 */
function displaySubstring(someStr, length, offset) {
	var str = substring(someStr, length, offset);

	// Display if it is not null
	if (str)
		alert(str);
}
function substring(someStr, length, offset) {
	var i;
	var resultStr = "";
	if (length != parseInt(length)) {
		alert("Error: length needs to be a number");
		return null;
	}
	if (offset != parseInt(offset)) {
		alert("Error: offset needs to be a number");
		return null;
	}

	// Length and offset are both numbers at this point
	length = parseInt(length);
	offset = parseInt(offset);

	if (length < 0 || length > someStr.length) {
		alert("Error: length must be greater than 0 and less than the string length");
		return null;
	}
	if (offset < 0 || offset > someStr.length) {
		alert("Error: offset must be greater than 0 and less than the string length");
		return null;
	}
	if (offset + length > someStr.length) {
		alert("Error: offset+length must be less than the string length");
		return null;
	}

	for (i = offset; i < (offset + length); i++)
		resultStr = resultStr.concat(someStr.charAt(i));
	// resultStr = resultStr.concat(someStr.charAt(i));

	return resultStr;
}
document.getElementById("fibonacci_button").addEventListener("click",
		runFibonacci);

/*
 * 6. Even Number Define function: isEven(someNum) Return true if even, false if
 * odd. Do not use % operator.
 */

/*
 * 7. Palindrome Define function isPalindrome(someStr) Return true if someStr is
 * a palindrome, otherwise return false
 */

/*
 * 8. Shapes Define function: printShape(shape, height, character) shape is a
 * String and is either "Square", "Triangle", "Diamond". height is a Number and
 * is the height of the shape. Assume the number is odd. character is a String
 * that represents the contents of the shape. Assume this String contains just
 * one character. Use a switch statement to determine which shape was passed in.
 * Use the console.log function to print the desired shape. Example for
 * printShape("Square", 3, "%"); %%% %%% %%% Example for printShape("Triangle",
 * 3, "$"); $ $$ $$$ Example for printShape("Diamond", 5, "*");
 *  ** **** **
 * 
 */

/*
 * 9. Object literal Define function traverseObject(someObj) Print every
 * property and it's value.
 */

/*
 * 10. Delete Element Define function deleteElement(someArr) Print length Delete
 * the third element in the array. Print length The lengths should be the same.
 */

/*
 * 11. Splice Element Define function spliceElement(someArr) Print length Splice
 * the third element in the array. Print length The lengths should be one less
 * than the original length.
 */

/*
 * 12. Defining an object using a constructor Define a function Person(name,
 * age) The following line should set a Person object to the variable john: var
 * john = new Person("John", 30);
 */

/*
 * 13. Defining an object using an object literal Define function
 * getPerson(name, age) The following line should set a Person object to the
 * variable john: var john = getPerson("John", 30);
 */
