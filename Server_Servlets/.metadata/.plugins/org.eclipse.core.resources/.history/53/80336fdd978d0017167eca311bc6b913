package com.reimburse.dao;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.ArrayList;

import com.reimburse.pojos.*;
import com.reimburse.pojos.Account.accountLevel;

public interface Dao {
	
	// Worker
	public Worker createWorker(String firstName, String lastName, String email,
			String username, String password, boolean isManager, boolean isHired);
	public Worker readWorker(int workerId);
	// change any worker's field except their uniquely identifying keys
	public boolean updateWorker(int workerId, Worker work);
	// A deleted worker is merely marked as deceased
	public boolean deleteWorker(int workerId);
	public ArrayList<Worker> readAllWorkers();
	
	// BankUser
	public BankUser createBankUser(Worker work, String username, String password);
	public BankUser readBankUser(int userId);
	// change any BankUser's fields except their uniquely identifying keys
	public boolean updateBankUser(int userId, BankUser guy);
	// A deleted User merely has their account marked as deleted
	public boolean deleteBankUser(int userId);
	public ArrayList<BankUser> readAllBankUsers();	
	
	// Clerk
	public Clerk createClerk(Worker work, int employeeId, String password, double hourlyWage);
	public Clerk readClerk(int employeeId);
	// change any clerk's field except their uniquely identifying keys
	public boolean updateClerk(int employeeId, Clerk cler);
	// A deleted Clerk is merely marked as no longer hired
	public boolean deleteClerk(int employeeId);
	public ArrayList<Clerk> readAllClerks();
	
	// Account
	public Account createAccount(BankUser guy, BigDecimal balance, accountType type, accountLevel level);
	public Account readAccount(int accountId);
	// change any account's field except their uniquely identifying keys
	public boolean updateAccount(int accountId, Account acc);
	// A deleted Account is merely marked as deleted
	public boolean deleteAccount(int accountId);
	public ArrayList<Account> readAllAccounts();
	public ArrayList<Account> readAllAccounts(int userId);
	
}
