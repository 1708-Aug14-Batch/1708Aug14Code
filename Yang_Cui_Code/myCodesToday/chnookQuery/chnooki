/* 2.1 SELECT */
select * from employee;
select * from employee where LASTNAME='King';
select * from employee where FIRSTNAME='Andrew' and REPORTSTO is null;

/* 2.2 ORDER BY */
select * from Album order by TITLE desc;
select FIRSTNAME from Customer order by CITY;

/* 2.3 INSERT INTO */
INSERT INTO Genre (GenreId, Name) VALUES (26, 'Random1');
INSERT INTO Genre (GenreId, Name) VALUES (27, 'Random2');

INSERT INTO Employee (EmployeeId, LastName, FirstName, Title, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email) 
VALUES (9, 'Dummy1', 'Dummy2', 'Placeholder1', 
TO_DATE('1998-1-10 00:00:00','yyyy-mm-dd hh24:mi:ss'), 
TO_DATE('2017-1-10 00:00:00','yyyy-mm-dd hh24:mi:ss'), 
'11730 Plaza America Dr. 2nd Floor', 'Reston', 'VA', 'USA', '20190', '+1 (703) 570-8181', '+1 (703) 995-4500', 'dummy@revature.com');
INSERT INTO Employee (EmployeeId, LastName, FirstName, Title, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email) 
VALUES (10, 'Dummy3', 'Dummy4', 'Placeholder2', 
TO_DATE('1998-1-10 00:00:00','yyyy-mm-dd hh24:mi:ss'), 
TO_DATE('2017-1-10 00:00:00','yyyy-mm-dd hh24:mi:ss'), 
'11730 Plaza America Dr. 2nd Floor', 'Reston', 'VA', 'USA', '20190', '+1 (703) 570-8181', '+1 (703) 995-4500', 'dummy@revature.com');

INSERT INTO Customer (CustomerId, FirstName, LastName, Company, Address, City, State, Country, PostalCode, Phone, Fax, Email, SupportRepId) 
VALUES (60, 'Dummy5', 'Dummy6', 'Revature', '11730 Plaza America Dr. 2nd Floor', 'Reston', 
'VA', 'USA', '20190', '+1 (703) 570-8181', '+1 (703) 995-4500', 'dummy@revature.com', 3);
INSERT INTO Customer (CustomerId, FirstName, LastName, Company, Address, City, State, Country, PostalCode, Phone, Fax, Email, SupportRepId) 
VALUES (61, 'Dummy7', 'Dummy8', 'Revature', '11730 Plaza America Dr. 2nd Floor', 'Reston', 
'VA', 'USA', '20190', '+1 (703) 570-8181', '+1 (703) 995-4500', 'dummy@revature.com', 3);

/* 2.4 UPDATE */
update Customer set FIRSTNAME='Rober', LASTNAME='Walter' where FIRSTNAME='Aaron' and LASTNAME='Mitchell';
update Artist set NAME='CCR' where NAME='Creedence Clearwater Revival';

/* 2.5 LIKE */
select * from Invoice where BILLINGADDRESS like 'T%';

/* 2.6 BETWEEN */
select * from Invoice where TOTAL between 15 and 20;
select * from Employee where HIREDATE between '01-JUL-03' and '01-MAR-04';

/* 2.7 DELETE */
alter table Invoice drop constraint FK_InvoiceCustomerId;
alter table Invoice add constraint FK_InvoiceCustomerId foreign key (CustomerId) references Customer(CustomerId) on delete cascade;
delete from Customer where FIRSTNAME='Robert' and LASTNAME='Walter';

/* 3.1 SYSTEM DEFINED FUNCTIONS */
create or replace procedure printCurrentTime as
todayDate DATE := SYSDATE;
timeNow TIMESTAMP := SYSTIMESTAMP;
begin
dbms_output.put_line(todayDate);
dbms_output.put_line(timeNow);
end printCurrentTime;

create or replace function findMediaLength(mediaID number)
return number is charCount number;
media varchar2(40);
cursor c1 is select Name from MediaType where MediaTypeId=mediaID;
begin
open c1;
fetch c1 into media;
charCount := REGEXP_count(media,'[a-zA-Z]');
dbms_output.put_line(charCount);
close c1;
return charCount;
end;

/* 3.2  SYSTME DEFINED AGGREGATE FUNCTIONS */
create or replace function avgofInvoice
return number is average number;
cursor c1 is select avg(total) from Invoice;
begin
open c1;
fetch c1 into average;
close c1;
dbms_output.put_line(average);
return average;
end;

create or replace function expansiveTrack
return number is t_id number;
cursor c1 is select trackid from track where UNITPRICE=(select max(unitprice) from track);
begin
open c1;
fetch c1 into t_id;
close c1;
dbms_output.put_line(t_id);
return t_id;
end;

/* 3.3 USER DEFINED SCALAR FUNCTIONS */
create or replace function avgIncoiveLinePrice
return number is roundavgprice number;
avgprice number;
cursor c1 is select avg(unitprice) from invoiceline;
begin
open c1;
fetch c1 into avgprice;
close c1;
roundavgprice:=round(avgprice);
dbms_output.put_line(roundavgprice);
return roundavgprice;
end;

/* 3.4 USER DEFINED TABLE VALUED FUNCTIONS */
create or replace function bornAfter1968
returns @notSomeOldFart table(EmployeeId NUMBER NOT NULL,
	LastName VARCHAR2(20) NOT NULL,
    FirstName VARCHAR2(20) NOT NULL,
    Title VARCHAR2(30),
    ReportsTo NUMBER,
    BirthDate DATE,
    HireDate DATE,
    Address VARCHAR2(70),
    City VARCHAR2(40),
    State VARCHAR2(40),
    Country VARCHAR2(40),
    PostalCode VARCHAR2(10),
    Phone VARCHAR2(24),
    Fax VARCHAR2(24),
    Email VARCHAR2(60),)
as begin
insert into @notSomeOldFart (LastName, FirstName, Title, ReportsTo, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email);
select * from employee where birthdate > '01-JAN-68';
update @notSomeOldFart;
return;
end;


