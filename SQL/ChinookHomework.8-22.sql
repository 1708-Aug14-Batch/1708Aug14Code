SELECT * FROM ALBUM;

SELECT TITLE FROM ALBUM
WHERE ALBUMID=23;

-- should get nothing
SELECT * FROM ALBUM
WHERE ALBUMID >= 20 AND ALBUMID <=30;

-- get 20 and 30
SELECT * FROM ALBUM
WHERE ALBUMID = 20 OR ALBUMID =30;

SELECT * FROM ALBUM
WHERE NOT ALBUMID = 1; 

-- ASC
SELECT * FROM ALBUM
ORDER BY ARTISTID;

SELECT * FROM ALBUM
ORDER BY ARTISTID DESC;

SELECT MAX(ALBUMID) FROM ALBUM;

SELECT MIN(TITLE) FROM ALBUM;

SELECT SUM(TOTAL) AS TOTAL FROM INVOICE;

SELECT AVG(TOTAL) AS AVERAGE FROM INVOICE;

SELECT COUNT(INVOICEID) AS NUM_INVOICE FROM INVOICE;

-- % on the right, start
SELECT * FROM EMPLOYEE
WHERE FIRSTNAME LIKE 'M%';

-- % on the left, ends
SELECT * FROM EMPLOYEE
WHERE ADDRESS LIKE '%SW';

-- % on both sides, contains
SELECT * FROM EMPLOYEE
WHERE POSTALCODE LIKE '%8%';

-- % in the middle, start and end
SELECT * FROM EMPLOYEE
WHERE LASTNAME LIKE 'K%g';

-- % contains o as 2nd char
SELECT * FROM EMPLOYEE
WHERE ADDRESS LIKE '%_o%';

SELECT * FROM ALBUM
WHERE ARTISTID IN (1,3,5,7,9);

-- gets customer with same first name as employees 
SELECT * FROM CUSTOMER
WHERE FIRSTNAME IN (
SELECT FIRSTNAME FROM EMPLOYEE);

SELECT * FROM ALBUM
WHERE ALBUMID BETWEEN 25 AND 30;

-- artist with more than 8 albums
SELECT COUNT(ALBUMID) AS ALBUMS_PER_ARTIST, ARTISTID FROM ALBUM
GROUP BY ARTISTID
HAVING COUNT(ALBUMID) > 8
ORDER BY ARTISTID;

SELECT * FROM INVOICE
WHERE EXISTS (SELECT * FROM CUSTOMER WHERE STATE = 'NY');

SELECT Ceil(total) AS CIELING FROM INVOICE;

SELECT FIRSTNAME, LASTNAME FROM CUSTOMER
UNION
SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE;