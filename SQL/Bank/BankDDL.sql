-- Data Definition

DROP TABLE USERS;
DROP TABLE ACCOUNTTYPE;
DROP TABLE ACCOUNT;

CREATE TABLE USERS (
  USERID NUMBER PRIMARY KEY,
  FIRSTNAME VARCHAR2(30) NOT NULL,
  LASTNAME VARCHAR2(30) NOT NULL,
  EMAIL VARCHAR2(50) NOT NULL UNIQUE,
  PASSWORD VARCHAR2(50) NOT NULL
);

CREATE TABLE ACCOUNTTYPE (
  TYPEID NUMBER PRIMARY KEY,
  NAME VARCHAR2(30)
);

CREATE TABLE ACCOUNT (
  ACCOUNTID NUMBER PRIMARY KEY,
  BALANCE NUMBER (14, 2) DEFAULT 0.00,
  TYPEID NUMBER NOT NULL,
  USERID NUMBER NOT NULL,
  
  CONSTRAINT FK_ACCOUNT_TYPE FOREIGN KEY (TYPEID)
  REFERENCES ACCOUNTTYPE(TYPEID),
  
  CONSTRAINT FK_ACCOUNT_USER FOREIGN KEY (USERID)
  REFERENCES USERS(USERID)
);
/

INSERT INTO ACCOUNTTYPE
VALUES (1, 'Checking');
INSERT INTO ACCOUNTTYPE
VALUES (2, 'Savings');
INSERT INTO ACCOUNTTYPE
VALUES (3, 'Credit');
/

CREATE SEQUENCE USERID_SEQ START WITH 1 INCREMENT BY 1 NOMAXVALUE;

CREATE OR REPLACE TRIGGER USERID_SEQ_TRIGGER
BEFORE INSERT ON USERS
FOR EACH ROW
BEGIN
  IF :NEW.USERID IS NULL THEN
    SELECT USERID_SEQ.NEXTVAL INTO :NEW.USERID FROM DUAL;
  END IF;
END;
/

CREATE SEQUENCE ACCOUNTID_SEQ START WITH 1000 INCREMENT BY 1 NOMAXVALUE;

CREATE OR REPLACE TRIGGER ACCOUNTID_SEQ_TRIGGER
BEFORE INSERT ON ACCOUNT
FOR EACH ROW
BEGIN
  IF :NEW.ACCOUNTID IS NULL THEN
    SELECT ACCOUNTID_SEQ.NEXTVAL INTO :NEW.ACCOUNTID FROM DUAL;
  END IF;
END;
/
