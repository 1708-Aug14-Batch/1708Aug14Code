package com.revature.q2;

public class Fibonacci {
	public static void main(String[] args) {
		int[] fibCache = new int[26];
		fibCache[0] = 0;
		fibCache[1] = 1;
		
		for (int i=2; i<26; i++)
			fibCache[i] = fibCache[i-1] + fibCache[i-2];
		
		System.out.println("First 25 fibonacci numbers:");
		for (int n: fibCache)
			System.out.print(n + " ");
		System.out.println("");
	}
	
	public static long naiveFibonacci(int n) throws IllegalArgumentException {
		if (n < 0)
			throw new IllegalArgumentException("n must be non negative");
		else if (n == 0)
			return 0;
		else if (n == 1)
			return 1;
		else
			return naiveFibonacci(n-1) + naiveFibonacci(n-2);
	}
	
	public static long smartFibonacci(int n) {
		long n0, n1, n2;
		n0 = 0;
		n1 = 1;
		for (int i=2; i<=n; i++) {
			n2 = n0 + n1;
			n0 = n1;
			n1 = n2;
		}
	}
}
