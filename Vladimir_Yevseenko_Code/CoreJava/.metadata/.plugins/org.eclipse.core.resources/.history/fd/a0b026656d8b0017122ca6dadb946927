package com.bank.main;

import java.math.BigDecimal;
import java.util.Scanner;

import com.bank.pojos.AccountType;
import com.bank.service.BankService;

public class Driver {
	static Scanner scanner = new Scanner(System.in);
	static BankService service = new BankService();
	
	public static void main(String[] args) {
		boolean running = true;
		
		while (running) {
			System.out.println("\nSelect an option:");
			System.out.println("(1) login, (2) create user");
			switch (scanner.nextLine()) {
				case "1": login(); break;
				case "2": createAcc(); break;
				default: System.out.println("\nInvalid choice.");
			}
		}
	}
	
	
	public static void login() {
		System.out.print("\nEnter email: ");
		String email = scanner.nextLine();
		System.out.print("Enter password: ");
		String pw = scanner.nextLine();
		
		if (service.attemptLogin(email, pw)) {
			System.out.println("\nLogin succesful");
			accountChoices();
		} else {
			System.out.println("\nInvalid email/password");
		}
	}
	
	public static void createAcc() {
		System.out.print("\nEnter first name: ");
		String fn = scanner.nextLine();
		System.out.print("Enter last name: ");
		String ln = scanner.nextLine();
		System.out.print("Enter email: ");
		String email = scanner.nextLine();
		System.out.print("Enter password: ");
		String pw = scanner.nextLine();
		
		if (service.createNewUser(fn, ln, email, pw))
			System.out.println("\nUser successfully created\n");
		else
			System.out.println("\nEmail already in use\n");
	}
	
	public static void accountChoices() {
		boolean running = true;
		while (running) {
			System.out.println("\nSelect an option");
			System.out.println("(1) select existing account (2) create new account (3) logout");
			switch (scanner.nextLine()) {
				case "1": accountSelect(); break;
				case "2": accountCreate(); break;
				case "3": running = false; break;
				default: System.out.println("Invalid choice\n");
			}
		}
	}
	
	public static void accountCreate() {
		System.out.println("\nWhich kind of account?");
		System.out.println("(1) Checking (2) Savings (3) Credit");
		String choice = scanner.nextLine();
		switch (choice) {
			case "1": case "2": case "3": 
			{
				if (service.createNewAccount(AccountType.get(Integer.parseInt(choice))))
					System.out.println("Account successfully created\n");
				else
					System.out.println("Account already exists\n");
			} break;
			default: System.out.println("Invalid choice\n");
		}
	}
	
	public static void accountSelect() {
		System.out.println("\nSelect account type");
		System.out.println("(1) Checking (2) Savings (3) Credit");
		String choice = scanner.nextLine();
		switch (choice) {
			case "1":
			case "2":
			case "3": {
				if (service.selectAccount(AccountType.get(Integer.parseInt(choice))))
					accountActions();
				else
					System.out.println("Account does not exist\n");
			} break;
			default: System.out.println("Invalid choice\n");
		}
	}
	
	public static void accountActions() {
		boolean running = true;
		while (running) {
			System.out.println("Select a choice");
			System.out.println("(1) View Balance (2) Deposit (3) Withdraw (4) Transfer (5) Exit Account");
			switch (scanner.nextLine()) {
				case "1": displayBalance(); break;
				case "2": deposit(); break;
				case "3": withdraw(); break;
				case "4": transfer(); break;
				case "5": running = false; break;
				default: System.out.println("Invalid choice\n");
			}
		}
	}
	
	public static void displayBalance() {
		System.out.println("Current balance is: " + service.getBalance().toPlainString() + "\n");
	}
	
	public static void deposit() {
		System.out.print("Amount to deposit: ");
		String amtStr = scanner.nextLine();
		try {
			BigDecimal amt = new BigDecimal(amtStr); 
			service.deposit(amt);
			System.out.println("Deposit successful\n");
		} catch (NumberFormatException ex) {
			System.out.println("Invalid input\n");
		}
	}
	
	public static void withdraw() {
		System.out.print("Amount to withdraw: ");
		String amtStr = scanner.nextLine();
		try {
			BigDecimal amt = new BigDecimal(amtStr); 
			if (service.withdraw(amt))
				System.out.println("Withdraw successful\n");
			else
				System.out.println("Cannot withdraw more than balance\n");
		} catch (NumberFormatException ex) {
			System.out.println("Invalid input\n");
		}
	}
	
	public static void transfer() {
		
	}
}
