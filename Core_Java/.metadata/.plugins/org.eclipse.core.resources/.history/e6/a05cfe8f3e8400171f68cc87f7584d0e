package com.bank.tests;

import static org.junit.Assert.*;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import com.bank.dao.DaoTextImpl;
import com.bank.pojos.Person;
import com.bank.service.Service;

public class BankTest {

	static DaoTextImpl daoImpl;
	static Service bankService;
	
	private static String testPersonFilename = "Test" + DaoTextImpl.personFilename;
	private static String testUserFilename = "Test" + DaoTextImpl.userFilename;
	private static String testClerkFilename = "Test" + DaoTextImpl.clerkFilename;
	
	// Copy over all of the data sets for safekeeping
	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
		
		copyFile(DaoTextImpl.personFilename, testPersonFilename);
		copyFile(DaoTextImpl.userFilename, testUserFilename);
		copyFile(DaoTextImpl.clerkFilename, testClerkFilename);
	}

	// Erase data created for the test
	// Restore the original data sets
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
		
		copyFile(testPersonFilename, DaoTextImpl.personFilename);
		copyFile(testUserFilename, DaoTextImpl.userFilename);
		copyFile(testClerkFilename, DaoTextImpl.clerkFilename);
	}

	@Before
	public void setUp() throws Exception {
		daoImpl = new DaoTextImpl();
		bankService = new Service();
	}

	@After
	public void tearDown() throws Exception {
		
	}
	
	@Test
	public void daoAdvancedTests() {
		// duplicate SSNs, usernames, people with multiple accounts, incorrect SSNs, incorr
		
		fail("Not yet implemented");
	}

	@Test
	public void daoBasicTests() {
		// create, read, update, delete
		
		daoImpl.createPerson(new Person(null, null, null));
		
		fail("Not yet implemented");
	}
	
	private static boolean copyFile(String scanFilename, String writeFilename) {
		Scanner scan = null;
		
		try(BufferedWriter bw = new BufferedWriter(
				new FileWriter(writeFilename, true)))  {
			
			// Read from original file
			scan = new Scanner(new File(scanFilename));
			// Write to new file
			
			
			while (scan.hasNext())
				bw.write(scan.nextLine() + "\n");
		
			bw.close();
			scan.close();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
			return false;
		} catch (IOException e) {
			e.printStackTrace();
			return false;
		} finally {
			scan.close();
		}
		
		return true;
	}

}
