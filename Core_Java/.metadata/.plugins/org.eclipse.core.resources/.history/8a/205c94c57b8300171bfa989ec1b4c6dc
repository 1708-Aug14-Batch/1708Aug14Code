package com.bank.service;

import java.util.ArrayList;

import com.bank.dao.*;
import com.bank.exceptions.InvalidSSNException;
import com.bank.exceptions.NoEmailException;
import com.bank.pojos.Account;
import com.bank.pojos.Account.accountType;
import com.bank.pojos.Person;
import com.bank.pojos.User;

public class Service {
	
	DAO daoImpl = new DaoTextImpl();
	
	public Account validateUser(String username, String password) {
		
		User guy = daoImpl.readUser(username);
		
		if (guy == null)
			return null;
		
		if (guy.getAccount().isDeleted()) {
			System.out.println("This account has been deleted.");
			return null;
		}
		
		if (guy.getAccount().getPassword().equals(password))
			return guy.getAccount();
		else return null;
	}
	
	private boolean isEmailAvailable(String email) {
		
		ArrayList<Person> peopleList = daoImpl.getAllPersons();
		
		for (Person guy : peopleList)
			if (guy.getEmail().equals(email))
				return false;
		
		return true;
	}
	
	private boolean isUsernameAvailable(String username) {
		
		ArrayList<Person> peopleList = daoImpl.getAllPersons();
		
		for (Person guy : peopleList) {
			User myUser = (User)guy;
			if (myUser.getAccount().getUsername().equals(username))
				return false;
		}
		
		return true;
		
	}
	
	// Attempts to create a person unless a person already exists with
	// the given SSN. Returns the person object either way
	public Person tryCreatePerson(String SSN, String firstName, String lastName) {
		
		Person per daoImpl.readPerson(SSN);
		
		// If person does not exist yet
		if (per == null) {
			Person guy = new Person(SSN, firstName, lastName);
			
			daoImpl.createPerson(guy);
			
			return guy;
		}
		
		return per;
		
	}
	
	public boolean createUser(Person guy, String username, String password, accountType type) {
		
		// Check that username is unique
		if (!isUsernameAvailable(username)) {
			System.out.println("That username is already taken.");
			return false;
		}
		
		// Create an account and associated user
		try {
			Account acc = new Account(guy, username, password, type);
			User myUser = new User(guy, acc);
			
			daoImpl.createUser(myUser);
		} catch (InvalidSSNException e) {
			e.printStackTrace();
		} catch (NoEmailException e) {
			e.printStackTrace();
		}
		
		return true;
	}
	// Always check whether the user has been deleted

}
