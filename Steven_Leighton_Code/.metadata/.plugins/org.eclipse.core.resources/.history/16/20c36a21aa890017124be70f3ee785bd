package com.bank.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import com.bank.pojo.Account;
import com.bank.pojo.User;
import com.bank.util.ConnectionFactory;

public class DBDAO implements DAO {

	@Override
	public int addUser(User user) {
		int id = -1;
		
		try(Connection conn = ConnectionFactory.getInstance().getConnection();){
			
			conn.setAutoCommit(false);
			String sql = "insert into users (firstname, lastname, username, pwd) values (?,?,?,?)";
			
			//to get back primary key
			String[] key = new String[1];
			key[0] = "userid";
			
			//setup prepared with sql and allocate space for key
			PreparedStatement ps = conn.prepareStatement(sql,key);
			//set values into sql string ?'s
			ps.setString(1, user.getFirstname());
			ps.setString(2, user.getLastname());
			ps.setString(3, user.getUsername());
			ps.setString(4, user.getPassword());
			
			//execute and get values
			int numRowsAdded = ps.executeUpdate();

			//results from keys
			ResultSet primaryKeys = ps.getGeneratedKeys();
			while(primaryKeys.next()){
				id = primaryKeys.getInt(1);
			}
			conn.commit();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return id;

	}

	@Override
	public User getUser(String usr, String pwd) {
		User user = new User();
int id = -1;
		
		try(Connection conn = ConnectionFactory.getInstance().getConnection();){
			
			conn.setAutoCommit(false);
			String sql = "select * from users where"
					+ " username = ? AND "
					+ " pwd = ?";
			
			
			
			//setup prepared with sql and allocate space for key
			PreparedStatement ps = conn.prepareStatement(sql);
			//set values into sql string ?'s
			ps.setString(1, usr);
			ps.setString(2, pwd);
			
			//execute and get values
			int numRowsAdded = ps.executeUpdate();

			//results from keys
			ResultSet primaryKeys = ps.getGeneratedKeys();
			while(primaryKeys.next()){
				id = primaryKeys.getInt(1);
			}
			conn.commit();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		
		return null;
	}

	@Override
	public void updateUser(User user) {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteUser(User user) {
		// TODO Auto-generated method stub

	}

	@Override
	public int addAccount(Account account) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Account getAccount(int accountID) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void updateAccount(Account account) {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteAccount(Account account) {
		// TODO Auto-generated method stub

	}

}
