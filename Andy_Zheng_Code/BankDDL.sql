CREATE TABLE USERS
(
    USERID NUMBER NOT NULL,
    FIRSTNAME VARCHAR2(50) NOT NULL,
    LASTNAME VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR2(50) NOT NULL,
    CONSTRAINT USERID PRIMARY KEY(USERID)
);

CREATE TABLE ACCOUNTTYPE
(
    TYPEID NUMBER NOT NULL,
    TYPE VARCHAR2(25) NOT NULL,
    CONSTRAINT TYPEID PRIMARY KEY(TYPEID)
);

CREATE TABLE ACCOUNTS
(
    ACCOUNTID NUMBER NOT NULL,
    BALANCE NUMBER(12,2) DEFAULT 0.00,
    USERID NUMBER NOT NULL,
    TYPEID NUMBER NOT NULL,
    CONSTRAINT ACCOUNTID PRIMARY KEY(ACCOUNTID),
    CONSTRAINT FK_USERID FOREIGN KEY(USERID) REFERENCES USERS (USERID),
    CONSTRAINT FK_TYPEID FOREIGN KEY(TYPEID) REFERENCES ACCOUNTTYPE(TYPEID)
);

-- Triggers and Sequences

CREATE SEQUENCE USERID_SEQ
INCREMENT BY 1
START WITH 1;
/
CREATE OR REPLACE TRIGGER USERID_TRIGGER
BEFORE INSERT ON USERS
FOR EACH ROW
BEGIN
    IF:NEW.USERID IS NULL THEN
    SELECT USERID_SEQ.NEXTVAL INTO :NEW.USERID FROM DUAL;
    END IF;
END;
/

CREATE SEQUENCE ACCOUNTID_SEQ
INCREMENT BY 1
START WITH 1;
/
CREATE OR REPLACE TRIGGER ACCOUNTID_TRIGGER
BEFORE INSERT ON ACCOUNTS
FOR EACH ROW
BEGIN
    IF:NEW.ACCOUNTID IS NULL THEN
    SELECT ACCOUNTID_SEQ.NEXTVAL INTO :NEW.ACCOUNTID FROM DUAL;
    END IF;
END;
/

INSERT INTO ACCOUNTTYPE(TYPEID,TYPE)
VALUES(1,'Checking');
INSERT INTO ACCOUNTTYPE(TYPEID,TYPE)
VALUES(2,'Savings');
INSERT INTO ACCOUNTTYPE(TYPEID,TYPE)
VALUES(3,'Credit');

INSERT INTO ACCOUNTS(USERID, TYPEID) 
VALUES(2,3);

SELECT * FROM USERS WHERE EMAIL = c AND PASSWORD = d;

SELECT * FROM ACCOUNTTYPE WHERE TYPEID = 1;